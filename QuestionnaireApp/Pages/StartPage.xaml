<Page x:Class="QuestionnaireApp.Pages.StartPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="StartPage"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Page.Resources>
        <Style x:Key="PlayerName.Stackpanel" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="PlayerName.Title" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource StartPage.Username.Color}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Padding" Value="8"/>
        </Style>
        
        <Style x:Key="PlayerName.Value" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource StartPage.Username.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource StartPage.Username.Color}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CaretBrush" Value="{StaticResource StartPage.Username.Caret.Color}"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="{StaticResource CornerRadius}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="StartButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Background" Value="{StaticResource StartPage.StartButton.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource StartPage.StartButton.Color}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="60,20"/>
            <Setter Property="Margin" Value="6"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="{StaticResource CornerRadius}"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource StartPage.StartButton.Hover.Background}"/>
                    <Setter Property="Foreground" Value="{StaticResource StartPage.StartButton.Hover.Color}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Difficulty.Text" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource StartPage.DificultyText.Color}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="Difficulty.Selector" TargetType="ComboBox">
            <Setter Property="Template" Value="{DynamicResource ComboBoxTemplateCustom}"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemContainerStyleCustom}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource StartPage.DificultySelection.Color}"/>
        </Style>

        <Style x:Key="ComboBoxToggleButtonCustom" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource StartPage.DificultySelection.Background}" BorderThickness="0" SnapsToDevicePixels="true" CornerRadius="{StaticResource CornerRadius}">
                            <Border x:Name="splitBorder" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource StartPage.DificultySelection.Color}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource StartPage.DificultySelection.Hover.Color}"/>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource StartPage.DificultySelection.Hover.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="ComboBoxTemplateCustom" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border x:Name="dropDownBorder" Background="Transparent" BorderThickness="0">
                        <ScrollViewer x:Name="DropDownScrollViewer" CanContentScroll="False">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{StaticResource StartPage.DificultySelection.Item.Background}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" RadiusX="{StaticResource CornerRadiusDouble}" RadiusY="{StaticResource CornerRadiusDouble}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonCustom}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
            
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxItemContainerStyleCustom" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="{StaticResource CornerRadius}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource StartPage.DificultySelection.Item.Hover.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource StartPage.DificultySelection.Item.Hover.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource StartPage.DificultySelection.Item.Selected.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource StartPage.DificultySelection.Item.Hover.Background}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <!-- Content -->
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <!-- PlayerName -->
            <RowDefinition Height="*"/>
            <!-- Start Button -->
            <RowDefinition Height="*"/>
            <!-- Difficulty selector -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- PlayerName -->
        <StackPanel
            x:Name="PlayerName"
            Grid.Column="0"
            Grid.Row="0"
            Style="{StaticResource PlayerName.Stackpanel}"
        >
            <!-- PlayerName Title -->
            <TextBlock
                x:Name="PlayerNameTitle"
                Text="Username:"
                Style="{StaticResource PlayerName.Title}"
            />
            <!-- PlayerName Value -->
            <TextBox
                x:Name="PlayerNameValue"
                Text="Player"
                Style="{StaticResource PlayerName.Value}"
            />
        </StackPanel>
        
        <!-- Start Button -->
        <Button
            Grid.Column="0"
            Grid.Row="1"
            x:Name="StartButton"
            Content="Start"
            Click="OnClickStart"
            Style="{StaticResource StartButton}"
        />

        <!-- Difficulty selection -->
        <StackPanel
            Grid.Column="0"
            Grid.Row="2"
            Orientation="Horizontal"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Margin="0,10,0,0"
        >
            <!-- Difficulty text -->
            <TextBlock
                Text="Difficulty:"
                Style="{StaticResource Difficulty.Text}"
            />
            <!-- Difficulty Selection box -->
            <ComboBox
                x:Name="DifficultySelector"
                Style="{StaticResource Difficulty.Selector}"      
            />
        </StackPanel>
    </Grid>
</Page>
